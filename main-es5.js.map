{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/movie-details/movie-details.component.ts","webpack:///src/app/movie-details/movie-details.component.html","webpack:///src/app/movies-service.service.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/register-form/register-form.component.ts","webpack:///src/app/register-form/register-form.component.html","webpack:///src/app/search.pipe.ts","webpack:///src/app/see.pipe.ts","webpack:///src/app/userData.ts","webpack:///src/app/watch.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","canActivate","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardGuard","_AuthService","_Router","next","state","userData","getValue","navigate","providedIn","AuthService","_HttpClient","data","post","user","token","userr","first_name","last_name","email","HomeComponent","_MoviesServiceService","trendingMovies","imgUrl","getmovies","subscribe","movies","results","err","console","log","LoginComponent","loginForm","required","formData","valid","login","value","message","saveData","submitForm","MovieDetailsComponent","_activatedRoute","isLoading","topTen","snapshot","paramMap","get","movieDetails","movie","movieDetail","i","push","MoviesServiceService","_httpClient","NavbarComponent","isLogin","RegisterFormComponent","registerForm","minLength","maxLength","signUp","SearchPipe","term","undefined","filter","toLowerCase","includes","name","SeePipe","overview","WatchPipe","number","substring","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuardGuard } from './auth-guard.guard';\n\n\nconst routes: Routes = [\n  {path:\"\", redirectTo:\"login\",pathMatch:\"full\"},\n  {path:\"home\", canActivate:[AuthGuardGuard],component:HomeComponent},\n  {path:\"register\", component:RegisterFormComponent},\n  {path:\"login\", component:LoginComponent},\n  {path:\"movieDetails/:id\" , component:MovieDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movie';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { WatchPipe } from './watch.pipe';\nimport { SeePipe } from './see.pipe';\nimport { SearchPipe } from './search.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RegisterFormComponent,\n    MovieDetailsComponent,\n    LoginComponent,\n    NavbarComponent,\n    WatchPipe,\n    SeePipe,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, from } from 'rxjs';\nimport { AuthService } from '../app/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n  constructor( public _AuthService:AuthService , public _Router:Router  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      if(this._AuthService.userData.getValue() != null){\n        return true ;\n    \n      }\n      else{\n        this._Router.navigate(['/login']);\n      }\n\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject} from 'rxjs';\nimport { userData } from './userData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  userData = new BehaviorSubject(null);\n  constructor( public _HttpClient:HttpClient) { \n\n  }\n  signUp(data):Observable<any>\n  {\n    return this._HttpClient.post('https://routeegypt.herokuapp.com/signup',data);\n  }\n  login(data):Observable<any>\n  {\n    return this._HttpClient.post('https://routeegypt.herokuapp.com/signin',data);\n  }\n  saveData(user,token){\n    let userr = new userData(user.first_name,user.last_name,user.email,token);\n    this.userData.next(userr) ;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MoviesServiceService } from '../movies-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./_home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  trendingMovies=[];\n  term:string;\n  imgUrl='https://image.tmdb.org/t/p/w500/';\n  constructor(_MoviesServiceService:MoviesServiceService) {\n\n    _MoviesServiceService.getmovies().subscribe((movies)=>{ this.trendingMovies=movies.results }, (err)=>{console.log(err) });\n    \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <input [(ngModel)]='term' type=\"text\" class=\"form-control m-auto\" style=\"width: 80%;\">\n        <div *ngFor='let movie of trendingMovies | search:term' class=\"col-3 my-3 text-center\">\n          <a [routerLink]=\"['/movieDetails',movie.id]\">\n            <img [src]='imgUrl+movie.poster_path' class=\"w-100 rounded\">  \n            <span class=\"text-white d-block mt-3\">{{movie.title}}</span>\n            <span>{{ movie.overview | slice:0:50}}</span>\n          </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormControl , Validators} from '@angular/forms' ;\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./_login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  err:string;\n  constructor(  public _AuthService:AuthService , public _Router:Router ) { }\n  loginForm:FormGroup = new FormGroup({\n    \"email\":new FormControl( null , [Validators.required , Validators.email]),\n    \"password\":new FormControl( null ,[Validators.required])\n  })\n  ngOnInit(): void {\n  }\n  submitForm(formData){\n    if(formData.valid == true) {\n      this._AuthService.login(formData.value).subscribe(data =>{\n        if(data.message == 'success'){\n          this._AuthService.saveData(data.user,data.token);\n          this._Router.navigate(['/home']);\n        }\n        else{\n          this.err = 'wrong userName or password';\n        }\n      })\n    }\n  };\n}\n","  <div *ngIf=\"err\" class=\"alert alert-danger\">\n    {{ err }}\n  </div>\n  <form [formGroup]='loginForm' (ngSubmit)='submitForm(loginForm)'>\n        \n        <div class=\"form-group text-center m-4\">\n            <label>Email:</label>\n            <input [class.is-invalid]='loginForm.get(\"email\").invalid == true && loginForm.get(\"email\").touched == true' formControlName='email' type=\"email\" class=\"form-control w-50 m-auto\">\n            <span *ngIf='loginForm.get(\"email\").invalid == true && loginForm.get(\"email\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        \n        <div class=\"form-group text-center m-4\">\n            <label> Password:</label>\n            <input [class.is-invalid]='loginForm.get(\"password\").invalid == true && loginForm.get(\"password\").touched == true' formControlName='password' type=\"password\" class=\"form-control w-50 m-auto\">\n            <span *ngIf='loginForm.get(\"password\").invalid == true && loginForm.get(\"password\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        <button [disabled]='loginForm.invalid == true' type=\"submit\" class=\"btn btn-primary d-block m-auto\">Login</button>\n        <div class=\"text-center my-2\">\n            <a routerLink='/register'>register ?</a>\n        </div>\n        \n    </form> ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MoviesServiceService } from '../movies-service.service';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./_movie-details.component.scss']\n})\nexport class MovieDetailsComponent implements OnInit {\n  id:any;\n  movieDetail:any;\n  isLoading:boolean=false;\n  imgUrl='https://image.tmdb.org/t/p/w500/';\n  topTen:any=[];\n\n  constructor( public _activatedRoute:ActivatedRoute , public _MoviesServiceService:MoviesServiceService  ) {\n\n  this.id = _activatedRoute.snapshot.paramMap.get('id');\n  _MoviesServiceService.movieDetails(this.id).subscribe((movie)=>{\n      this.movieDetail = movie;\n      this.isLoading = true; \n    });\n    _MoviesServiceService.getmovies().subscribe((movie)=>{\n      for(let i = 0 ; i < 10 ; i++){\n        this.topTen.push(movie.results[i]);\n      }\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","    <div class=\"row\">\n        <div class=\"col-6\">\n            <img [src]='imgUrl+movieDetail.backdrop_path' alt=\"\" class=\"w-100\">\n            <h3 class=\"text-center\">{{ movieDetail.overview }}</h3>\n        </div>\n        <div class=\"col-6\">\n            <div *ngFor='let movie of topTen'>\n                <img [src]='imgUrl+movie.poster_path' alt=\"\" class=\"w-25\">\n            </div>\n        </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesServiceService {\n\n  constructor(public _httpClient:HttpClient) { }\n\n  getmovies():Observable<any>\n  {\n    return this._httpClient.get('https://api.themoviedb.org/3/trending/movie/week?api_key=c385f31c8c7014edf94ac2261ae13592');\n  }\n\n  movieDetails(id):Observable<any>\n  {\n    return this._httpClient.get(`https://api.themoviedb.org/3/movie/${id}?api_key=c385f31c8c7014edf94ac2261ae13592`);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { userData } from '../userData';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./_navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  isLogin:boolean = false;\n  constructor(public _AuthService:AuthService) {\n\n    _AuthService.userData.subscribe(data =>{\n      if(data){\n        this.isLogin == true;\n      }\n      else{\n        this.isLogin == false;\n      }\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row py-3\">\n        <div class=\"col-2 font-weight-bolder\">\n            Logo\n        </div>\n        <div class=\"col-8 d-flex align-items-center justify-content-center\">\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Home </a>\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Tv </a>\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Trending </a>\n        </div>\n        <div class=\"col-2\">\n            <a routerLink='/login' class=\"mx-2\"> Login </a>\n            <a routerLink='/register' class=\"mx-2\"> Register </a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormControl , Validators} from '@angular/forms' ;\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./_register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n  err:string;\n  constructor( public _AuthService:AuthService , public _Router:Router) { }\n  registerForm:FormGroup = new FormGroup({\n    \"first_name\": new FormControl (null, [Validators.required, Validators.minLength(3), Validators.maxLength(8)]),\n    \"last_name\":  new FormControl ( null , [Validators.required , Validators.minLength(3), Validators.maxLength(8)]),\n    \"age\":  new FormControl ( null , [Validators.required]),\n    \"email\":new FormControl( null , [Validators.required , Validators.email]),\n    \"password\":new FormControl( null ,[Validators.required])\n  })\n\n  ngOnInit(): void {\n  }\n  submitForm(formData){\n    if(formData.valid == true) {\n      this._AuthService.signUp(formData.value).subscribe(data=>{\n       if(data.message == 'success'){\n         this._Router.navigate(['/login']);\n       }\n       else{\n        this.err = 'the email is aleardy registerd' ;\n       }\n      })\n    }\n  };\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"err\" class=\"alert alert-danger\">\n        {{ err }}\n    </div>\n    <form [formGroup]='registerForm' (ngSubmit)='submitForm(registerForm)'>\n        \n        <div class=\"form-group m-4\">\n            <label>first_name:</label>\n            <input [class.is-invalid]='registerForm.get(\"first_name\").invalid == true && registerForm.get(\"first_name\").touched == true' formControlName='first_name' type=\"text\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"first_name\").invalid == true && registerForm.get(\"first_name\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>last_name:</label>\n            <input [class.is-invalid]='registerForm.get(\"last_name\").invalid == true && registerForm.get(\"last_name\").touched == true' formControlName='last_name' type=\"text\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"last_name\").invalid == true && registerForm.get(\"last_name\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">last name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>age:</label>\n            <input [class.is-invalid]='registerForm.get(\"age\").invalid == true && registerForm.get(\"age\").touched == true' formControlName='age' type=\"number\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"age\").invalid == true && registerForm.get(\"age\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>email:</label>\n            <input [class.is-invalid]='registerForm.get(\"email\").invalid == true && registerForm.get(\"email\").touched == true' formControlName='email' type=\"email\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"email\").invalid == true && registerForm.get(\"email\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        \n        <div class=\"form-group m-4\">\n            <label>password:</label>\n            <input [class.is-invalid]='registerForm.get(\"password\").invalid == true && registerForm.get(\"password\").touched == true' formControlName='password' type=\"password\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"password\").invalid == true && registerForm.get(\"password\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        <button [disabled]='registerForm.invalid == true' type=\"submit\" class=\"btn btn-primary\">register</button>\n        \n    </form> \n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(movie:any, term:string): any {\n    if(term == undefined){\n      return movie ; \n    }else{\n      return movie.filter(function(movie){\n        return movie.title.toLowerCase().includes(term.toLowerCase());\n      })\n    }\n  }\n\n}\n  ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'see'\n})\nexport class SeePipe implements PipeTransform {\n\n  transform(overview:string): string {\n    return 'see' + overview ;\n  }\n\n}\n","export class userData {\n    constructor(public first_name , public last_name , public email , public token){\n        \n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'watch'\n})\nexport class WatchPipe implements PipeTransform {\n\n  transform(overview: string, number: number): string {\n    return overview.substring(0,number);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}