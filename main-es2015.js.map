{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.guard.ts","./src/app/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/movie-details/movie-details.component.ts","./src/app/movie-details/movie-details.component.html","./src/app/movies-service.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/register-form/register-form.component.ts","./src/app/register-form/register-form.component.html","./src/app/search.pipe.ts","./src/app/see.pipe.ts","./src/app/userData.ts","./src/app/watch.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;AAC0B;AACA;AACvB;AACL;;;AAGpD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;IAC9C,EAAC,IAAI,EAAC,MAAM,EAAE,WAAW,EAAC,CAAC,gEAAc,CAAC,EAAC,SAAS,EAAC,kEAAa,EAAC;IACnE,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,4FAAqB,EAAC;IAClD,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,qEAAc,EAAC;IACxC,EAAC,IAAI,EAAC,kBAAkB,EAAG,SAAS,EAAC,4FAAqB,EAAC;CAC5D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KACjB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACO;AACE;AACwB;AACf;AACe;AACvB;AACG;AACnB;AACJ;AACM;;AA0BpC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,kEAAmB;YACnB,0DAAW;SAEZ;mIAIU,SAAS,mBArBlB,2DAAY;QACZ,kEAAa;QACb,4FAAqB;QACrB,4FAAqB;QACrB,qEAAc;QACd,yEAAe;QACf,sDAAS;QACT,kDAAO;QACP,wDAAU,aAGV,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,kEAAmB;QACnB,0DAAW;6FAMF,SAAS;cAvBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,4FAAqB;oBACrB,4FAAqB;oBACrB,qEAAc;oBACd,yEAAe;oBACf,sDAAS;oBACT,kDAAO;oBACP,wDAAU;iBACX;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,kEAAmB;oBACnB,0DAAW;iBAEZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AASpC,MAAM,cAAc;IACzB,YAAoB,YAAwB,EAAU,OAAc;QAAhD,iBAAY,GAAZ,YAAY,CAAY;QAAU,YAAO,GAAP,OAAO,CAAO;IAAI,CAAC;IACzE,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAExB,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,IAAI,EAAC;YAC/C,OAAO,IAAI,CAAE;SAEd;aACG;YACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnC;IAEL,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;AACrB;;;AAK/B,MAAM,WAAW;IAEtB,YAAoB,WAAsB;QAAtB,gBAAW,GAAX,WAAW,CAAW;QAD1C,aAAQ,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IAGrC,CAAC;IACD,MAAM,CAAC,IAAI;QAET,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,yCAAyC,EAAC,IAAI,CAAC,CAAC;IAC/E,CAAC;IACD,KAAK,CAAC,IAAI;QAER,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,yCAAyC,EAAC,IAAI,CAAC,CAAC;IAC/E,CAAC;IACD,QAAQ,CAAC,IAAI,EAAC,KAAK;QACjB,IAAI,KAAK,GAAG,IAAI,kDAAQ,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAE;IAC7B,CAAC;;sEAhBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICG1C,yEACE;IAAA,uEACE;IAAA,oEACA;IAAA,0EAAsC;IAAA,uDAAe;IAAA,4DAAO;IAC5D,uEAAM;IAAA,uDAAgC;;IAAA,4DAAO;IAC/C,4DAAI;IACN,4DAAM;;;;IALD,0DAAyC;IAAzC,0JAAyC;IACrC,0DAAgC;IAAhC,kKAAgC;IACC,0DAAe;IAAf,+EAAe;IAC/C,0DAAgC;IAAhC,0JAAgC;;ADC3C,MAAM,aAAa;IAKxB,YAAY,qBAA0C;QAHtD,mBAAc,GAAC,EAAE,CAAC;QAElB,WAAM,GAAC,kCAAkC,CAAC;QAGxC,qBAAqB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE,GAAE,IAAI,CAAC,cAAc,GAAC,MAAM,CAAC,OAAO,EAAC,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE,GAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;IAE3H,CAAC;IAEF,QAAQ;IACR,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCR1B,yEACI;QAAA,yEACE;QAAA,2EACE;QADK,+KAAkB;QAAzB,4DACE;QAAA,0GACE;;QAMN,4DAAM;QACV,4DAAM;;QATO,0DAAkB;QAAlB,6EAAkB;QAClB,0DAAkD;QAAlD,kKAAkD;;6FDKlD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoB;;;;;;;ICDpE,yEACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sFACF;;;IAMU,2EAAiK;IAAA,kFAAuB;IAAA,4DAAO;;;IAM/L,2EAAuK;IAAA,kFAAuB;IAAA,4DAAO;;ADH1M,MAAM,cAAc;IAEzB,YAAqB,YAAwB,EAAU,OAAc;QAAhD,iBAAY,GAAZ,YAAY,CAAY;QAAU,YAAO,GAAP,OAAO,CAAO;QACrE,cAAS,GAAa,IAAI,wDAAS,CAAC;YAClC,OAAO,EAAC,IAAI,0DAAW,CAAE,IAAI,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,KAAK,CAAC,CAAC;YACzE,UAAU,EAAC,IAAI,0DAAW,CAAE,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC;IAJwE,CAAC;IAK3E,QAAQ;IACR,CAAC;IACD,UAAU,CAAC,QAAQ;QACjB,IAAG,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACvD,IAAG,IAAI,CAAC,OAAO,IAAI,SAAS,EAAC;oBAC3B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACjD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;qBACG;oBACF,IAAI,CAAC,GAAG,GAAG,4BAA4B,CAAC;iBACzC;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAAA,CAAC;;4EArBS,cAAc;8FAAd,cAAc;QCXzB,0GACE;QAEF,0EAEM;QAFwB,0IAAY,6BAAqB,IAAC;QAE1D,yEACI;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACrB,sEACA;QAAA,4GAAiK;QACrK,4DAAM;QAEN,yEACI;QAAA,wEAAQ;QAAA,qEAAS;QAAA,4DAAQ;QACzB,uEACA;QAAA,8GAAuK;QAC3K,4DAAM;QACN,6EAAoG;QAAA,iEAAK;QAAA,4DAAS;QAClH,0EACI;QAAA,wEAA0B;QAAA,sEAAU;QAAA,4DAAI;QAC5C,4DAAM;QAEV,4DAAO;;QArBJ,yEAAW;QAGV,0DAAuB;QAAvB,oFAAuB;QAIZ,0DAAqG;QAArG,iKAAqG;QACtG,0DAAwF;QAAxF,0JAAwF;QAKvF,0DAA2G;QAA3G,uKAA2G;QAC5G,0DAA8F;QAA9F,gKAA8F;QAEhG,0DAAsC;QAAtC,mGAAsC;;6FDLzC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICMtC,sEACI;IAAA,oEACJ;IAAA,4DAAM;;;;IADG,0DAAgC;IAAhC,kKAAgC;;ADE9C,MAAM,qBAAqB;IAOhC,YAAoB,eAA8B,EAAU,qBAA0C;QAAlF,oBAAe,GAAf,eAAe,CAAe;QAAU,0BAAqB,GAArB,qBAAqB,CAAqB;QAJtG,cAAS,GAAS,KAAK,CAAC;QACxB,WAAM,GAAC,kCAAkC,CAAC;QAC1C,WAAM,GAAK,EAAE,CAAC;QAId,IAAI,CAAC,EAAE,GAAG,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,EAAE;YAC3D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,qBAAqB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,EAAE;YACnD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,EAAG,CAAC,EAAE,EAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;IACH,CAAC;IAEF,QAAQ;IACR,CAAC;;0FAtBU,qBAAqB;qGAArB,qBAAqB;QCT9B,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,wEAAwB;QAAA,uDAA0B;QAAA,4DAAK;QAC3D,4DAAM;QACN,yEACI;QAAA,iHACI;QAER,4DAAM;QACV,4DAAM;;QARO,0DAAwC;QAAxC,wKAAwC;QACrB,0DAA0B;QAA1B,yFAA0B;QAG7C,0DAA4B;QAA5B,+EAA4B;;6FDGhC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,oBAAoB;IAE/B,YAAmB,WAAsB;QAAtB,gBAAW,GAAX,WAAW,CAAW;IAAI,CAAC;IAE9C,SAAS;QAEP,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,2FAA2F,CAAC,CAAC;IAC3H,CAAC;IAED,YAAY,CAAC,EAAE;QAEb,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,sCAAsC,EAAE,2CAA2C,CAAC,CAAC;IACnH,CAAC;;wFAZU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICMtC,uEAA4D;IAAA,iEAAK;IAAA,4DAAI;;;IACrE,uEAA4D;IAAA,+DAAG;IAAA,4DAAI;;;IACnE,uEAA4D;IAAA,qEAAS;IAAA,4DAAI;;ADC9E,MAAM,eAAe;IAE1B,YAAmB,YAAwB;QAAxB,iBAAY,GAAZ,YAAY,CAAY;QAD3C,YAAO,GAAW,KAAK,CAAC;QAGtB,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrC,IAAG,IAAI,EAAC;gBACN,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;aACtB;iBACG;gBACF,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;aACvB;QACH,CAAC,CAAC;IACH,CAAC;IAEF,QAAQ;IACR,CAAC;;8EAfU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,iEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,uGAA4D;QAC5D,uGAA4D;QAC5D,uGAA4D;QAChE,4DAAM;QACN,yEACI;QAAA,uEAAqC;QAAA,mEAAM;QAAA,4DAAI;QAC/C,wEAAwC;QAAA,sEAAS;QAAA,4DAAI;QACzD,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAT4B,0DAAuB;QAAvB,qFAAuB;QACvB,0DAAuB;QAAvB,qFAAuB;QACvB,0DAAuB;QAAvB,qFAAuB;;6FDC5C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoB;;;;;;;ICAlE,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,sFACJ;;;IAMQ,2EAAiL;IAAA,kFAAuB;IAAA,4DAAO;;;IAM/M,2EAA+K;IAAA,iFAAsB;IAAA,4DAAO;;;IAM5M,2EAAmK;IAAA,kFAAuB;IAAA,4DAAO;;;IAMjM,2EAAuK;IAAA,kFAAuB;IAAA,4DAAO;;;IAMrM,2EAA6K;IAAA,kFAAuB;IAAA,4DAAO;;ADvBhN,MAAM,qBAAqB;IAEhC,YAAoB,YAAwB,EAAU,OAAc;QAAhD,iBAAY,GAAZ,YAAY,CAAY;QAAU,YAAO,GAAP,OAAO,CAAO;QACpE,iBAAY,GAAa,IAAI,wDAAS,CAAC;YACrC,YAAY,EAAE,IAAI,0DAAW,CAAE,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7G,WAAW,EAAG,IAAI,0DAAW,CAAG,IAAI,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAChH,KAAK,EAAG,IAAI,0DAAW,CAAG,IAAI,EAAG,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,OAAO,EAAC,IAAI,0DAAW,CAAE,IAAI,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,KAAK,CAAC,CAAC;YACzE,UAAU,EAAC,IAAI,0DAAW,CAAE,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC;IAPsE,CAAC;IASzE,QAAQ;IACR,CAAC;IACD,UAAU,CAAC,QAAQ;QACjB,IAAG,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;gBACxD,IAAG,IAAI,CAAC,OAAO,IAAI,SAAS,EAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACnC;qBACG;oBACH,IAAI,CAAC,GAAG,GAAG,gCAAgC,CAAE;iBAC7C;YACF,CAAC,CAAC;SACH;IACH,CAAC;IAAA,CAAC;;0FAxBS,qBAAqB;qGAArB,qBAAqB;QCVlC,yEACI;QAAA,iHACI;QAEJ,0EAEI;QAF6B,iJAAY,gCAAwB,IAAC;QAElE,yEACI;QAAA,wEAAO;QAAA,sEAAW;QAAA,4DAAQ;QAC1B,sEACA;QAAA,mHAAiL;QACrL,4DAAM;QAEN,yEACI;QAAA,wEAAO;QAAA,sEAAU;QAAA,4DAAQ;QACzB,uEACA;QAAA,qHAA+K;QACnL,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,uEACA;QAAA,qHAAmK;QACvK,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,uEACA;QAAA,qHAAuK;QAC3K,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,uEACA;QAAA,qHAA6K;QACjL,4DAAM;QACN,8EAAwF;QAAA,oEAAQ;QAAA,4DAAS;QAE7G,4DAAO;QACX,4DAAM;;QArCG,0DAAW;QAAX,yEAAW;QAGV,0DAA0B;QAA1B,uFAA0B;QAIjB,0DAAqH;QAArH,iLAAqH;QACtH,0DAAwG;QAAxG,0KAAwG;QAKvG,0DAAmH;QAAnH,+KAAmH;QACpH,0DAAsG;QAAtG,wKAAsG;QAKrG,0DAAuG;QAAvG,mKAAuG;QACxG,0DAA0F;QAA1F,4JAA0F;QAKzF,0DAA2G;QAA3G,uKAA2G;QAC5G,0DAA8F;QAA9F,gKAA8F;QAK7F,0DAAiH;QAAjH,6KAAiH;QAClH,0DAAoG;QAApG,sKAAoG;QAEtG,0DAAyC;QAAzC,sGAAyC;;6FDzB5C,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,UAAU;IAErB,SAAS,CAAC,KAAS,EAAE,IAAW;QAC9B,IAAG,IAAI,IAAI,SAAS,EAAC;YACnB,OAAO,KAAK,CAAE;SACf;aAAI;YACH,OAAO,KAAK,CAAC,MAAM,CAAC,UAAS,KAAK;gBAChC,OAAO,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YAChE,CAAC,CAAC;SACH;IACH,CAAC;;oEAVU,UAAU;sGAAV,UAAU;6FAAV,UAAU;cAHtB,kDAAI;eAAC;gBACJ,IAAI,EAAE,QAAQ;aACf;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,OAAO;IAElB,SAAS,CAAC,QAAe;QACvB,OAAO,KAAK,GAAG,QAAQ,CAAE;IAC3B,CAAC;;8DAJU,OAAO;gGAAP,OAAO;6FAAP,OAAO;cAHnB,kDAAI;eAAC;gBACJ,IAAI,EAAE,KAAK;aACZ;;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,QAAQ;IACjB,YAAmB,UAAU,EAAU,SAAS,EAAU,KAAK,EAAU,KAAK;QAA3D,eAAU,GAAV,UAAU;QAAU,cAAS,GAAT,SAAS;QAAU,UAAK,GAAL,KAAK;QAAU,UAAK,GAAL,KAAK;IAE9E,CAAC;CACJ;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,SAAS;IAEpB,SAAS,CAAC,QAAgB,EAAE,MAAc;QACxC,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAC,MAAM,CAAC,CAAC;IACtC,CAAC;;kEAJU,SAAS;oGAAT,SAAS;6FAAT,SAAS;cAHrB,kDAAI;eAAC;gBACJ,IAAI,EAAE,OAAO;aACd;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuardGuard } from './auth-guard.guard';\n\n\nconst routes: Routes = [\n  {path:\"\", redirectTo:\"login\",pathMatch:\"full\"},\n  {path:\"home\", canActivate:[AuthGuardGuard],component:HomeComponent},\n  {path:\"register\", component:RegisterFormComponent},\n  {path:\"login\", component:LoginComponent},\n  {path:\"movieDetails/:id\" , component:MovieDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movie';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { WatchPipe } from './watch.pipe';\nimport { SeePipe } from './see.pipe';\nimport { SearchPipe } from './search.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RegisterFormComponent,\n    MovieDetailsComponent,\n    LoginComponent,\n    NavbarComponent,\n    WatchPipe,\n    SeePipe,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, from } from 'rxjs';\nimport { AuthService } from '../app/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n  constructor( public _AuthService:AuthService , public _Router:Router  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      if(this._AuthService.userData.getValue() != null){\n        return true ;\n    \n      }\n      else{\n        this._Router.navigate(['/login']);\n      }\n\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject} from 'rxjs';\nimport { userData } from './userData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  userData = new BehaviorSubject(null);\n  constructor( public _HttpClient:HttpClient) { \n\n  }\n  signUp(data):Observable<any>\n  {\n    return this._HttpClient.post('https://routeegypt.herokuapp.com/signup',data);\n  }\n  login(data):Observable<any>\n  {\n    return this._HttpClient.post('https://routeegypt.herokuapp.com/signin',data);\n  }\n  saveData(user,token){\n    let userr = new userData(user.first_name,user.last_name,user.email,token);\n    this.userData.next(userr) ;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MoviesServiceService } from '../movies-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./_home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  trendingMovies=[];\n  term:string;\n  imgUrl='https://image.tmdb.org/t/p/w500/';\n  constructor(_MoviesServiceService:MoviesServiceService) {\n\n    _MoviesServiceService.getmovies().subscribe((movies)=>{ this.trendingMovies=movies.results }, (err)=>{console.log(err) });\n    \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <input [(ngModel)]='term' type=\"text\" class=\"form-control m-auto\" style=\"width: 80%;\">\n        <div *ngFor='let movie of trendingMovies | search:term' class=\"col-3 my-3 text-center\">\n          <a [routerLink]=\"['/movieDetails',movie.id]\">\n            <img [src]='imgUrl+movie.poster_path' class=\"w-100 rounded\">  \n            <span class=\"text-white d-block mt-3\">{{movie.title}}</span>\n            <span>{{ movie.overview | slice:0:50}}</span>\n          </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormControl , Validators} from '@angular/forms' ;\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./_login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  err:string;\n  constructor(  public _AuthService:AuthService , public _Router:Router ) { }\n  loginForm:FormGroup = new FormGroup({\n    \"email\":new FormControl( null , [Validators.required , Validators.email]),\n    \"password\":new FormControl( null ,[Validators.required])\n  })\n  ngOnInit(): void {\n  }\n  submitForm(formData){\n    if(formData.valid == true) {\n      this._AuthService.login(formData.value).subscribe(data =>{\n        if(data.message == 'success'){\n          this._AuthService.saveData(data.user,data.token);\n          this._Router.navigate(['/home']);\n        }\n        else{\n          this.err = 'wrong userName or password';\n        }\n      })\n    }\n  };\n}\n","  <div *ngIf=\"err\" class=\"alert alert-danger\">\n    {{ err }}\n  </div>\n  <form [formGroup]='loginForm' (ngSubmit)='submitForm(loginForm)'>\n        \n        <div class=\"form-group text-center m-4\">\n            <label>Email:</label>\n            <input [class.is-invalid]='loginForm.get(\"email\").invalid == true && loginForm.get(\"email\").touched == true' formControlName='email' type=\"email\" class=\"form-control w-50 m-auto\">\n            <span *ngIf='loginForm.get(\"email\").invalid == true && loginForm.get(\"email\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        \n        <div class=\"form-group text-center m-4\">\n            <label> Password:</label>\n            <input [class.is-invalid]='loginForm.get(\"password\").invalid == true && loginForm.get(\"password\").touched == true' formControlName='password' type=\"password\" class=\"form-control w-50 m-auto\">\n            <span *ngIf='loginForm.get(\"password\").invalid == true && loginForm.get(\"password\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        <button [disabled]='loginForm.invalid == true' type=\"submit\" class=\"btn btn-primary d-block m-auto\">Login</button>\n        <div class=\"text-center my-2\">\n            <a routerLink='/register'>register ?</a>\n        </div>\n        \n    </form> ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MoviesServiceService } from '../movies-service.service';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./_movie-details.component.scss']\n})\nexport class MovieDetailsComponent implements OnInit {\n  id:any;\n  movieDetail:any;\n  isLoading:boolean=false;\n  imgUrl='https://image.tmdb.org/t/p/w500/';\n  topTen:any=[];\n\n  constructor( public _activatedRoute:ActivatedRoute , public _MoviesServiceService:MoviesServiceService  ) {\n\n  this.id = _activatedRoute.snapshot.paramMap.get('id');\n  _MoviesServiceService.movieDetails(this.id).subscribe((movie)=>{\n      this.movieDetail = movie;\n      this.isLoading = true; \n    });\n    _MoviesServiceService.getmovies().subscribe((movie)=>{\n      for(let i = 0 ; i < 10 ; i++){\n        this.topTen.push(movie.results[i]);\n      }\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","    <div class=\"row\">\n        <div class=\"col-6\">\n            <img [src]='imgUrl+movieDetail.backdrop_path' alt=\"\" class=\"w-100\">\n            <h3 class=\"text-center\">{{ movieDetail.overview }}</h3>\n        </div>\n        <div class=\"col-6\">\n            <div *ngFor='let movie of topTen'>\n                <img [src]='imgUrl+movie.poster_path' alt=\"\" class=\"w-25\">\n            </div>\n        </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesServiceService {\n\n  constructor(public _httpClient:HttpClient) { }\n\n  getmovies():Observable<any>\n  {\n    return this._httpClient.get('https://api.themoviedb.org/3/trending/movie/week?api_key=c385f31c8c7014edf94ac2261ae13592');\n  }\n\n  movieDetails(id):Observable<any>\n  {\n    return this._httpClient.get(`https://api.themoviedb.org/3/movie/${id}?api_key=c385f31c8c7014edf94ac2261ae13592`);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { userData } from '../userData';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./_navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  isLogin:boolean = false;\n  constructor(public _AuthService:AuthService) {\n\n    _AuthService.userData.subscribe(data =>{\n      if(data){\n        this.isLogin == true;\n      }\n      else{\n        this.isLogin == false;\n      }\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row py-3\">\n        <div class=\"col-2 font-weight-bolder\">\n            Logo\n        </div>\n        <div class=\"col-8 d-flex align-items-center justify-content-center\">\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Home </a>\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Tv </a>\n            <a routerLink='/home' *ngIf='isLogin == true' class=\"mx-4\"> Trending </a>\n        </div>\n        <div class=\"col-2\">\n            <a routerLink='/login' class=\"mx-2\"> Login </a>\n            <a routerLink='/register' class=\"mx-2\"> Register </a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormControl , Validators} from '@angular/forms' ;\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./_register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n  err:string;\n  constructor( public _AuthService:AuthService , public _Router:Router) { }\n  registerForm:FormGroup = new FormGroup({\n    \"first_name\": new FormControl (null, [Validators.required, Validators.minLength(3), Validators.maxLength(8)]),\n    \"last_name\":  new FormControl ( null , [Validators.required , Validators.minLength(3), Validators.maxLength(8)]),\n    \"age\":  new FormControl ( null , [Validators.required]),\n    \"email\":new FormControl( null , [Validators.required , Validators.email]),\n    \"password\":new FormControl( null ,[Validators.required])\n  })\n\n  ngOnInit(): void {\n  }\n  submitForm(formData){\n    if(formData.valid == true) {\n      this._AuthService.signUp(formData.value).subscribe(data=>{\n       if(data.message == 'success'){\n         this._Router.navigate(['/login']);\n       }\n       else{\n        this.err = 'the email is aleardy registerd' ;\n       }\n      })\n    }\n  };\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"err\" class=\"alert alert-danger\">\n        {{ err }}\n    </div>\n    <form [formGroup]='registerForm' (ngSubmit)='submitForm(registerForm)'>\n        \n        <div class=\"form-group m-4\">\n            <label>first_name:</label>\n            <input [class.is-invalid]='registerForm.get(\"first_name\").invalid == true && registerForm.get(\"first_name\").touched == true' formControlName='first_name' type=\"text\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"first_name\").invalid == true && registerForm.get(\"first_name\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>last_name:</label>\n            <input [class.is-invalid]='registerForm.get(\"last_name\").invalid == true && registerForm.get(\"last_name\").touched == true' formControlName='last_name' type=\"text\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"last_name\").invalid == true && registerForm.get(\"last_name\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">last name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>age:</label>\n            <input [class.is-invalid]='registerForm.get(\"age\").invalid == true && registerForm.get(\"age\").touched == true' formControlName='age' type=\"number\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"age\").invalid == true && registerForm.get(\"age\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n\n        <div class=\"form-group m-4\">\n            <label>email:</label>\n            <input [class.is-invalid]='registerForm.get(\"email\").invalid == true && registerForm.get(\"email\").touched == true' formControlName='email' type=\"email\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"email\").invalid == true && registerForm.get(\"email\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        \n        <div class=\"form-group m-4\">\n            <label>password:</label>\n            <input [class.is-invalid]='registerForm.get(\"password\").invalid == true && registerForm.get(\"password\").touched == true' formControlName='password' type=\"password\" class=\"form-control\">\n            <span *ngIf='registerForm.get(\"password\").invalid == true && registerForm.get(\"password\").touched == true' class=\"text-danger border border-danger d-block rounded mt-1 p-1\">first name is not valid</span>\n        </div>\n        <button [disabled]='registerForm.invalid == true' type=\"submit\" class=\"btn btn-primary\">register</button>\n        \n    </form> \n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(movie:any, term:string): any {\n    if(term == undefined){\n      return movie ; \n    }else{\n      return movie.filter(function(movie){\n        return movie.title.toLowerCase().includes(term.toLowerCase());\n      })\n    }\n  }\n\n}\n  ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'see'\n})\nexport class SeePipe implements PipeTransform {\n\n  transform(overview:string): string {\n    return 'see' + overview ;\n  }\n\n}\n","export class userData {\n    constructor(public first_name , public last_name , public email , public token){\n        \n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'watch'\n})\nexport class WatchPipe implements PipeTransform {\n\n  transform(overview: string, number: number): string {\n    return overview.substring(0,number);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}